@using System;
@using Sukt.Core.CodeGenerator;

@{

    ProjectMetadata metadata = Model;
}

//------------------------------------------------------------------------------
//<auto-generated>
    //     此代码由代码生成器生成。
    //     手动更改此文件可能导致应用程序出现意外的行为。
    //     如果重新生成代码，将覆盖对此文件的手动更改。
    //
</auto-generated>
//<copyright file="@(metadata.EntityMetadata.EntityName)EntityConfiguration.cs" company="@metadata.Company">
    //     @metadata.Copyright
    //
</copyright>
//<site>@metadata.SiteUrl</site>
//<last-editor>@metadata.Creator</last-editor>
//<last-date>@DateTime.Now.ToString("yyyy/MM/dd HH:mm")</last-date>
//------------------------------------------------------------------------------
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using @(metadata.Namespace).Entities;
namespace @(metadata.Namespace).EntityConfigurations
{

    /// &lt;summary&gt;
    /// @(string.IsNullOrEmpty(metadata.EntityMetadata.DisplayName) ? metadata.EntityMetadata.EntityName : metadata.EntityMetadata.DisplayName)
    /// &lt;/summary&gt;
    public partial class @(metadata.EntityMetadata.EntityName)Configuration : EntityMappingConfiguration&lt;@(metadata.EntityMetadata.EntityName), @(metadata.EntityMetadata.PrimaryKeyType)&gt;
    {
         /// &lt;summary&gt;
         /// 重写以实现实体类型各个属性的数据库配置
         /// &lt;/summary&gt;
         /// &lt;param name="builder"&gt;实体类型创建器&lt;/param&gt;
        public override void Map(EntityTypeBuilder&lt;@metadata.EntityMetadata.EntityName&gt; builder)
        {
            @foreach (var property in metadata.EntityMetadata.
                )
            {
                @if (property.IsPrimaryKey)
                {
                <text>
                builder.HasKey(x => x.Id);
                </text>
                }
                else
                {
                <text>
                builder.Property(x =>x.@(property.PropertyName)).HasComment("@property.DisplayName").IsRequired(@(property.IsNullable.ToString().ToLower()));
                </text>
                }
            }
                builder.ToTable("@metadata.EntityMetadata.EntityName");
        }
    }
}