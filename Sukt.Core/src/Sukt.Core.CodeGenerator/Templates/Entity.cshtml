@using System;
@using Sukt.Core.CodeGenerator;

@{

    ProjectMetadata metadata = Model;
}

//------------------------------------------------------------------------------
//<auto-generated>
//此代码由代码生成器生成。
//手动更改此文件可能导致应用程序出现意外的行为。
//如果重新生成代码，将覆盖对此文件的手动更改。
//</auto-generated>
//<copyright file="@(metadata.EntityMetadata.EntityName).cs" company="@metadata.Company">
//@metadata.Copyright
//</copyright>
//<site>@metadata.SiteUrl</site>
//<last-editor>@metadata.Creator</last-editor>
//<last-date>@DateTime.Now.ToString("yyyy/MM/dd HH:mm")</last-date>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using Sukt.Core.Shared.Entity;

namespace @(metadata.Namespace).Entities
{

    /// &lt;summary&gt;
    ///@(string.IsNullOrEmpty(metadata.EntityMetadata.DisplayName) ? metadata.EntityMetadata.EntityName : metadata.EntityMetadata.DisplayName)
    /// &lt;/summary&gt;
    [DisplayName("@(metadata.EntityMetadata.DisplayName)")]
    public partial class @metadata.EntityMetadata.EntityName : EntityBase<@(metadata.EntityMetadata.PrimaryKeyType)>
        @{ 
            if (metadata.EntityMetadata.IsFullAudited())
            {
                <text>,IFullAuditedEntity<@metadata.EntityMetadata.AuditedUserKeyType></text>
            }
            else
            {
                if (metadata.EntityMetadata.IsCreation)
                {
                    <text>,ICreatedAudited<@metadata.EntityMetadata.AuditedUserKeyType></text>
                }
                if (metadata.EntityMetadata.IsModification)
                { 
                        <text>,IModifyAudited<@metadata.EntityMetadata.AuditedUserKeyType></text>
                }
                if (metadata.EntityMetadata.IsSoftDelete)
                {
                        <text>,ISoftDelete</text>
                }
            }
        }
        {
        @foreach (var property in metadata.EntityMetadata.Properties.Where(o => !o.IsPrimaryKey))
        {
            <text>
                [DisplayName("@property.DisplayName")]
                /// &lt;summary&gt;
                /// 获取或设置 @property.DisplayName
                /// &lt;/summary&gt;
                public @property.CSharpType @property.PropertyName { get; set; }
            </text>
        }
        @{

            if (metadata.EntityMetadata.IsFullAudited())
            {
                <text>
                /// &lt;summary&gt;
                /// 获取或设置最后修改用户
                /// &lt;/summary&gt;
                [DisplayName("最后修改用户")]
                public @metadata.EntityMetadata.AuditedUserKeyType? LastModifyId { get; set; }
                /// &lt;summary&gt;
                /// 获取或设置最后修改时间
                /// &lt;/summary&gt;
                [DisplayName("最后修改时间")]
                public DateTime LastModifedAt { get; set; }
                /// &lt;summary&gt;
                /// 获取或设置是否删除
                /// &lt;/summary&gt;
                [DisplayName("是否删除")]
                public bool IsDeleted { get; set; }
                /// &lt;summary&gt;
                /// 获取或设置创建用户ID
                /// &lt;/summary&gt;
                [DisplayName("创建用户ID")]
                public @metadata.EntityMetadata.AuditedUserKeyType? CreatedId { get; set; }
                /// &lt;summary&gt;
                /// 获取或设置创建时间
                /// &lt;/summary&gt;
                [DisplayName("创建时间")]
                public  DateTime CreatedAt { get; set; }
                </text>
            }
            else
            {
                if (metadata.EntityMetadata.IsCreation)
                {
                <text>
                /// &lt;summary&gt;
                /// 获取或设置创建用户ID
                /// &lt;/summary&gt;
                [DisplayName("创建用户ID")]
                public @metadata.EntityMetadata.AuditedUserKeyType? CreatedId { get; set; }
                /// &lt;summary&gt;
                /// 获取或设置创建时间
                /// &lt;/summary&gt;
                [DisplayName("创建时间")]
                public  DateTime CreatedAt { get; set; }
                </text>
                }
                if (metadata.EntityMetadata.IsModification)
                {
                <text>
                /// &lt;summary&gt;
                /// 获取或设置最后修改用户
                /// &lt;/summary&gt;
                [DisplayName("最后修改用户")]
                public @metadata.EntityMetadata.AuditedUserKeyType? LastModifyId { get; set; }
                /// &lt;summary&gt;
                /// 获取或设置最后修改时间
                /// &lt;/summary&gt;
                [DisplayName("最后修改时间")]
                public DateTime LastModifedAt { get; set; }
                </text>
                }
                if (metadata.EntityMetadata.IsSoftDelete)
                {
                <text>
                /// &lt;summary&gt;
                /// 获取或设置是否删除
                /// &lt;/summary&gt;
                [DisplayName("是否删除")]
                public bool IsDeleted { get; set; }
                </text>
                }
            }
        }

    }
}
